import {classes} from "./classes";
import {format} from "date-fns";
import {Teacher} from "@prisma/client";
import {createDate} from "../utils/time";

type weekOfDay = {
    className: string,
    subclass?: string,
    timeStart: Date,
    timeEnd: Date,
    classroom?: string,
    teacher: Teacher,
    canteen?: boolean,
    leave?: boolean
};

export const {
    greeting,
    onlyPrivate,
    weekend,
    lesson,
    gap,
    now,
    chill
} = {
    gap: "üôå *–§–æ—Ä—Ç–æ—á–∫–∞*",
    onlyPrivate: "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ —è —Ä–∞–±–æ—Ç–∞—é —Ç–æ–ª—å–∫–æ –≤ *–ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö* üòî",
    greeting: (name: string | null) => `–ü—Ä–∏–≤–µ—Ç, *${name ?? '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}* ü§ó\n–î–∞–Ω–Ω—ã–π –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –ø–æ–º–æ—á—å –≤–∞–º —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º –≤ —à–∫–æ–ª–µ –°–®\\-27`,
    weekend: `–°–µ–≥–æ–¥–Ω—è —É—Ä–æ–∫–æ–≤ _–ù–ï–¢_\\! ü•≥`,
    lesson: ({
                 classroom,
                 timeEnd,
                 timeStart,
                 subclass,
                 className,
                 teacher: {surname, name, patronymic},
                 canteen,
                 leave
             }: weekOfDay) => {
        let subclassName = '';
        if (subclass) {
            subclassName = ['–°–ò–ó–û', '–ü–ª–∞—Ç–Ω—ã–µ'].includes(subclass) ? ` ${subclass}` : subclass;
        }

        const classroomName = classroom?.replace('-', '\\-') ?? '';
        const teacher = `${surname} ${name[0]}.${patronymic[0]}.`;

        const start = format(createDate(timeStart), 'HH:mm');
        const end = format(createDate(timeEnd), 'HH:mm');

        return `${classes[+className]}*${subclassName}* ${classroomName} \`${teacher}\` _ __${start}\\-${end}__ _${
            canteen ? '\n\t\t\t\t\t\t*–û—Ç–≤–µ—Å—Ç–∏ –≤ —Å—Ç–æ–ª–æ–≤–∫—É* ü¶Æ' : ''
        }${
            leave ? '\n\t\t\t\t\t\t*–í—ã–≤–µ—Å—Ç–∏ –∏–∑ —à–∫–æ–ª—ã* üëä' : ''
        }`;
    },
    now: "*–°–µ–π—á–∞—Å*",
    chill: "*–ù–∞ —Å–µ–≥–æ–¥–Ω—è –±–æ–ª—å—à–µ –Ω–∏—á–µ–≥–æ –Ω–µ—Ç\\. –û—Ç–¥—ã—Ö–∞–µ–º\\!* ü´∂"
}
